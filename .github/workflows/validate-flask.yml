name: Pipeline - Server - Flask Backend Validation

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      HEROKU_REGISTRY: registry.heroku.com
      HEROKU_APP_NAME: generate-tiny-url

    steps:
      - uses: actions/checkout@v2

      # check if backend boots fine
      - name: Run flask container - backend
        run: |
          docker-compose -f docker-compose.yml up -d backend

      - name: Print flask status
        run: |
          docker ps --filter "name=backend"

      - name: Tag image
        run: |
          docker image tag generate-tiny-url_backend ${{ env.HEROKU_REGISTRY }}/${{ env.HEROKU_APP_NAME }}/web

      - name: List images
        run: |
          docker image ls

      - name: Fail if flask container is not running
        run: |
          if [[ x`docker ps --filter "name=backend" | grep Up` = x ]]; then exit 1; fi

      # run test suite
      - name: Print test results
        run: |
          docker exec backend pytest -v

      - name: Fail if tests are not 100%
        run: |
          if [[ x`docker exec backend pytest -v` =~ "FAILED" ]]; then exit 1; fi

      # heroku login/logout
      - name: Heroku login
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login -u ${{ secrets.HEROKU_USER }} ${{ env.HEROKU_REGISTRY }} --password-stdin

      - name: Heroku logout
        run: |
          docker logout ${{ env.HEROKU_REGISTRY }}

      # slack notification
      - name: Send notification to slack
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_TITLE: Backend tests [generate-tiny-url] for the commit - ${{ github.event.head_commit.message }}
          SLACK_MESSAGE: Good news - backend boots OK, tests are 100%
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

